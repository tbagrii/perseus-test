{"version":3,"sources":["logo.svg","components/CharacterList/CharacterListItem.js","components/EpisodeList/EpisodeListItem.js","components/EpisodeList/EpisodeList.js","components/CharacterList/CharacterList.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","CharacterListItem","item","getEpisodes","classes","Grid","onClick","container","className","src","image","width","height","xs","Paper","name","EpisodeListItem","href","EpisodeList","alignItems","fontSize","lineHeight","fontWeight","typography","fontWeightBold","characterList","overflow","CharacterList","useState","setCharacterList","episodeList","setEpisodeList","search","setSearch","useEffect","fetch","then","result","json","data","results","catch","e","console","log","filter","toLowerCase","includes","length","episode","Typography","type","placeholder","value","onChange","event","target","map","id","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,I,4CCKTA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,SACXC,MAAOP,EAAMQ,QAAQC,KAAKC,eAIxBC,EAAoB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACxBC,EAAUhB,IAGhB,OACI,eAACiB,EAAA,EAAD,CAAMC,QAHU,kBAAMH,EAAYD,IAGNK,WAAS,EAACC,UAAWJ,EAAQb,KAAMI,QAAS,EAAxE,UACI,cAACU,EAAA,EAAD,CAAMH,MAAI,EAAV,SACI,qBAAKO,IAAKP,EAAKQ,MAAOC,MAAM,KAAKC,OAAO,SAE5C,cAACP,EAAA,EAAD,CAAMH,MAAI,EAACW,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAON,UAAWJ,EAAQX,MAA1B,SAAkCS,EAAKa,aCzBjDC,EAAkB,SAAC,GAAY,IAAXd,EAAU,EAAVA,KACtB,OACE,4BAAG,mBAAGe,KAAMf,EAAT,SAAgBA,OCCnBgB,EAAc,SAAC,GAAY,IAAXhB,EAAU,EAAVA,KAClB,OACE,mCACE,cAAC,EAAD,CAAiBA,KAAMA,O,QCCzBd,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACV2B,WAAY,UAEdpB,KAAM,CACFqB,SAAU,GACVC,WAAY,OACZC,WAAYhC,EAAMiC,WAAWC,gBAEhCC,cAAe,CACXb,OAAQ,QACRc,SAAU,YAIXC,EAAgB,WAClB,MAA0CC,mBAAS,IAAnD,mBAAOH,EAAP,KAAsBI,EAAtB,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAA4BH,mBAAS,IAArC,mBAAOI,EAAP,KAAeC,EAAf,KAEM7B,EAAUhB,IAEhB8C,qBAAU,WAGFC,MAFY,6CAGPC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GACFV,EAAiBU,EAAKC,YAEzBC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,QACjC,IAEHR,qBAAU,WACN,IAAMM,EAAUf,EAAcoB,QAC5B,SAAC3C,GAAD,OACEA,EAAKa,KAAK+B,cAAcC,SAASf,MAErCQ,EAAQQ,QAAUjB,EAAeS,EAAQ,GAAGS,WAC7C,CAACjB,IAEJ,IAGM7B,EAAc,SAACD,GACjB6B,EAAe7B,EAAK+C,UAExB,OACI,sBAAKzC,UAAWJ,EAAQb,KAAxB,UACA,cAACc,EAAA,EAAD,CAAME,WAAS,EAAf,SACI,cAACF,EAAA,EAAD,CAAMH,MAAI,EAAV,SACE,cAACgD,EAAA,EAAD,CAAY1C,UAAWJ,EAAQL,KAA/B,0EAGN,uBACIoD,KAAK,OACLC,YAAY,SACZC,MAAOrB,EACPsB,SAjBgB,SAACC,GACrBtB,EAAUsB,EAAMC,OAAOH,UAmBvB,qBAAK7C,UAAWJ,EAAQqB,cAAxB,SAAwCA,EAAcuB,OAAS,EACzDvB,EAAcgC,KAAI,SAACvD,GAAD,OAAU,cAAC,EAAD,CAAmBC,YAAaA,EAA2BD,KAAMA,GAAfA,EAAKwD,OACnF,gDAEL5B,EAAYkB,OAAS,GACflB,EAAY2B,KAAI,SAACvD,EAAMyD,GAAP,OAAiB,cAAC,EAAD,CAAyBzD,KAAMA,GAAbyD,UC9DnDC,MARf,WACI,OACI,qBAAKpD,UAAU,MAAf,SACI,cAAC,EAAD,OCIGqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9d84758e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst CharacterListItem = ({item, getEpisodes}) => {\n    const classes = useStyles();\n    const handleClick = () => getEpisodes(item);\n\n    return (\n        <Grid onClick={handleClick} container className={classes.root} spacing={3}>\n            <Grid item>\n                <img src={item.image} width=\"50\" height=\"50\"/>\n            </Grid>\n            <Grid item xs={6}>\n                <Paper className={classes.paper}>{item.name}</Paper>\n            </Grid>\n             \n        </Grid>\n    );\n}\n\nexport {CharacterListItem};\n","\nconst EpisodeListItem = ({item}) => {\n    return (\n      <p><a href={item}>{item}</a></p>\n    );\n}\n\nexport {EpisodeListItem};\n","import React, { useState, useEffect } from 'react';\nimport {EpisodeListItem} from './EpisodeListItem';\n\n\nconst EpisodeList = ({item}) => {\n    return (\n      <>\n        <EpisodeListItem item={item} />\n      </>\n    );\n}\nexport {EpisodeList};\n","import React, { useState, useEffect } from 'react';\nimport {CharacterListItem} from './CharacterListItem';\nimport {EpisodeList} from '../EpisodeList/EpisodeList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    alignItems: 'center'\n  },\n  text: {\n      fontSize: 14,\n      lineHeight: '16px',\n      fontWeight: theme.typography.fontWeightBold,\n    },\n   characterList: {\n       height: '300px',\n       overflow: 'auto'\n   }\n}));\n\nconst CharacterList = () => {\n    const [characterList, setCharacterList] = useState([]);\n    const [episodeList, setEpisodeList] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    \n    const classes = useStyles();\n\n    useEffect(() => {\n            const url = 'https://rickandmortyapi.com/api/character';\n                            \n            fetch(url)\n                .then(result => result.json())\n                .then(data => {\n                    setCharacterList(data.results);\n                })\n                .catch(e => console.log(e));\n    }, []);\n\n    useEffect(() => {\n        const results = characterList.filter(\n          (item) =>\n            item.name.toLowerCase().includes(search)\n        );\n        results.length && setEpisodeList(results[0].episode);\n    }, [search]);\n\n    const searchCharacter = (event) => {\n        setSearch(event.target.value);\n    };\n    const getEpisodes = (item) => {\n        setEpisodeList(item.episode);\n    };\n    return (\n        <div className={classes.root}>\n        <Grid container>\n            <Grid item >\n              <Typography className={classes.text}>Choose Character from list or search in the search field</Typography>\n            </Grid>\n        </Grid>\n        <input\n            type=\"text\"\n            placeholder=\"Search\"\n            value={search}\n            onChange={searchCharacter}\n          />\n\n        <div className={classes.characterList}>{characterList.length > 0 \n            ? characterList.map((item) => <CharacterListItem getEpisodes={getEpisodes} key={item.id} item={item} />)\n            : <p>Nothing found</p>\n        }</div>\n        {episodeList.length > 0  \n            && episodeList.map((item, index) => <EpisodeList key={index} item={item} />)\n        }\n        </div>\n    );\n}\n\nexport {CharacterList};\n","import logo from './logo.svg';\nimport './App.css';\n\nimport {CharacterList} from './components/CharacterList/CharacterList';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <CharacterList />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}